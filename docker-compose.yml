x-airflow-common:
  &airflow-common
  image: airflow-hive:latest
  environment:

    &airflow-common-env
    AIRFLOW__CORE__EXECUTOR: LocalExecutor  # Mudar para LocalExecutor
    AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
    AIRFLOW__CORE__FERNET_KEY: ''
    AIRFLOW__WEBSERVER__SECRET_KEY: "uJ7BQc5eZP29KuyRZVsfRY91SpqI3LCee7zkKTpq6rOHRqCjljjvWDp90oOnc4SP5PhD4uXsmiykKKnzow"
    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
    AIRFLOW__SCHEDULER__MIN_FILE_PROCESS_INTERVAL: 5
    AIRFLOW__SCHEDULER__DAG_DIR_LIST_INTERVAL: 20
    AIRFLOW__WEBSERVER__EXPOSE_CONFIG: 'true'
    AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
    AIRFLOW__API__AUTH_BACKENDS: 'airflow.api.auth.backend.basic_auth,airflow.api.auth.backend.session'
    AIRFLOW__SCHEDULER__ENABLE_HEALTH_CHECK: 'true'
    AIRFLOW__LOGGING__LOGGING_LEVEL: "DEBUG"
    _PIP_ADDITIONAL_REQUIREMENTS: "rich-argparse<1.3.0 unidecode"
    UMASK: "000"  # Corrigido aqui

  volumes:
    - ${AIRFLOW_PROJ_DIR:-.}/dags:/opt/airflow/dags
    - ${AIRFLOW_PROJ_DIR:-.}/logs:/opt/airflow/logs
    - ${AIRFLOW_PROJ_DIR:-.}/config:/opt/airflow/config
    - ${AIRFLOW_PROJ_DIR:-.}/plugins:/opt/airflow/plugins
    - ${AIRFLOW_PROJ_DIR:-.}/datalake:/opt/airflow/datalake

  user: "${AIRFLOW_UID:-50000}:0"
  depends_on:
    &airflow-common-depends-on
    postgres:
      condition: service_healthy

services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
      TZ: "America/Sao_Paulo"
    volumes:
      - ./postgres-db-volume:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "airflow" ]
      interval: 10s
      retries: 5
      start_period: 5s
    restart: always
    networks:
      airflow-net:
        ipv4_address: 172.25.0.16

  airflow-webserver:
    <<: *airflow-common
    command: webserver
    ports:
      - "8080:8080"
    environment:
      <<: *airflow-common-env
      TZ: "America/Sao_Paulo"  # Adicionando configuração de fuso horário
    healthcheck:
      test: [ "CMD", "curl", "--fail", "http://localhost:8080/health" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    restart: always
    depends_on:
      <<: *airflow-common-depends-on
      airflow-init:
        condition: service_completed_successfully
    networks:
      airflow-net:
        ipv4_address: 172.25.0.15


  airflow-scheduler:
    <<: *airflow-common
    command: scheduler
    healthcheck:
      test: [ "CMD", "curl", "--fail", "http://localhost:8974/health" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    restart: always
    depends_on:
      <<: *airflow-common-depends-on
      airflow-init:
        condition: service_completed_successfully
    networks:
      airflow-net:
        ipv4_address: 172.25.0.14


  airflow-init:
    <<: *airflow-common
    entrypoint: /bin/bash
    command:
      - -c
      - |
        mkdir -p /sources/{logs,dags,plugins,datalake/depara}
        
        chmod -R 777 /sources/{logs,dags,plugins,datalake}
        chmod g+s /sources/{logs,dags,plugins,datalake}
        chown -R "${AIRFLOW_UID}:0" /sources/{logs,dags,plugins,datalake}
        
        exec /entrypoint airflow version
    
    environment:
      <<: *airflow-common-env
      TZ: "America/Sao_Paulo"  # Adicionando configuração de fuso horário
      _AIRFLOW_DB_MIGRATE: 'true'
      _AIRFLOW_WWW_USER_CREATE: 'true'
      _AIRFLOW_WWW_USER_USERNAME: ${_AIRFLOW_WWW_USER_USERNAME:-airflow}
      _AIRFLOW_WWW_USER_PASSWORD: ${_AIRFLOW_WWW_USER_PASSWORD:-airflow}
      _PIP_ADDITIONAL_REQUIREMENTS: ''
    
    user: "0:0"
    volumes:
      - ${AIRFLOW_PROJ_DIR:-.}:/sources
    networks:
      airflow-net:
        ipv4_address: 172.25.0.13

  airflow-cli:
    <<: *airflow-common
    profiles:
      - debug
    environment:
      <<: *airflow-common-env
      CONNECTION_CHECK_MAX_COUNT: "0"
      TZ: "America/Sao_Paulo"  # Adicionando configuração de fuso horário
    command:
      - bash
      - -c
      - airflow
    
    networks:
      airflow-net:
        ipv4_address: 172.25.0.12



  dbt_hive:
    image: ghcr.io/dbt-labs/dbt-core:1.10.0b2
    container_name: dbt_hive
    environment:
      TZ: "America/Sao_Paulo"
    volumes:
      - ./dbt:/usr/app/dbt
    working_dir: /usr/app/dbt
    entrypoint: /bin/sh
    command: -c "apt-get update && \
      apt-get install -y gcc g++ libkrb5-dev && \
      pip install dbt-hive && \
      tail -f /dev/null"
    networks:
      airflow-net:
        ipv4_address: 172.25.0.12
  mysql:
    image: mysql:8.0
    container_name: mysql
    environment:
      MYSQL_DATABASE: metastore_db
      MYSQL_USER: hive
      MYSQL_PASSWORD: password
      MYSQL_ROOT_PASSWORD: rootpassword
      TZ: "America/Sao_Paulo"
    command: --default-authentication-plugin=mysql_native_password
    volumes:
      - ./mysqldata:/var/lib/mysql
    ports:
      - "3306:3306"
    restart: unless-stopped
    networks:
      airflow-net:
        ipv4_address: 172.25.0.40
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "127.0.0.1", "-u", "root", "-prootpassword" ]
      interval: 10s
      timeout: 5s
      retries: 20

  hive-metastore:
    image: apache_hive_mysql  # Substitua por uma imagem válida se necessário, como bde2020/hive:2.3.2-postgresql-metastore
    container_name: metastore-standalone
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      SERVICE_NAME: metastore
      TZ: "America/Sao_Paulo"
      DB_DRIVER: mysql
      SERVICE_OPTS: >
        -Djavax.jdo.option.ConnectionDriverName=com.mysql.cj.jdbc.Driver
        -Djavax.jdo.option.ConnectionURL=jdbc:mysql://172.25.0.40:3306/metastore_db?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
        -Djavax.jdo.option.ConnectionUserName=hive
        -Djavax.jdo.option.ConnectionPassword=password
    ports:
      - "9083:9083"
    volumes:
      - ./warehouse:/opt/hive/data/warehouse
      - ./datalake:/opt/hive/datalake
    restart: unless-stopped
    networks:
      airflow-net:
        ipv4_address: 172.25.0.41

  hive-server:
    image: apache_hive_mysql  # Verifique se a mesma imagem funciona como HiveServer2
    container_name: hiveserver2-standalone
    depends_on:
      - hive-metastore
    environment:
      SERVICE_NAME: hiveserver2
      SERVICE_OPTS: -Dhive.metastore.uris=thrift://172.25.0.41:9083
      IS_RESUME: "true"
      TZ: "America/Sao_Paulo"
    ports:
      - "10000:10000"
      - "10002:10002"
    volumes:
      - ./warehouse:/opt/hive/data/warehouse
      - ./datalake:/opt/hive/datalake
    restart: unless-stopped
    networks:
      airflow-net:
        ipv4_address: 172.25.0.42

networks:
  airflow-net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.25.0.0/16